<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN" "https://checkstyle.org/dtds/configuration_1_3.dtd">
<module name="Checker">
  <property name="severity" value="warning"/>

  <module name="TreeWalker">
    <!-- Annotations -->
    <module name="AnnotationLocation">
      <property name="allowSamelineMultipleAnnotations" value="false"/>
      <property name="allowSamelineSingleParameterlessAnnotation" value="true"/>
      <property name="allowSamelineParameterizedAnnotation" value="false"/>
      <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, PACKAGE_DEF, ENUM_CONSTANT_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF, RECORD_DEF, COMPACT_CTOR_DEF"/>
    </module>
    <!-- 
    <module name="AnnotationOnSameLine">
      <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF, RECORD_DEF, COMPACT_CTOR_DEF"/>
    </module> 
    -->
    <module name="AnnotationUseStyle">
      <property name="closingParens" value="never"/>
      <property name="elementStyle" value="compact"/>
      <property name="trailingArrayComma" value="never"/>
    </module>
    <module name="MissingDeprecated">
      <property name="violateExecutionOnNonTightHtml" value="false"/>
    </module>
    <module name="MissingOverride">
      <property name="javaFiveCompatibility" value="false"/>
    </module>
    <module name="PackageAnnotation">
    </module>
    <module name="SuppressWarnings">
      <property name="format" value="^\s*+$"/>
      <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, ANNOTATION_FIELD_DEF, ENUM_CONSTANT_DEF, PARAMETER_DEF, VARIABLE_DEF, METHOD_DEF, CTOR_DEF, COMPACT_CTOR_DEF, RECORD_DEF"/>
    </module>
    <module name="SuppressWarningsHolder">
      <property name="aliasList" value=""/>
    </module>

    <!-- Block Checks -->
    <module name="AvoidNestedBlocks">
      <property name="severity" value="warning"/>
      <property name="allowInSwitchCase" value="false"/>
    </module>
    <module name="EmptyBlock">
      <property name="severity" value="warning"/>
      <property name="option" value="text"/>
      <property name="tokens" value="LITERAL_WHILE, LITERAL_TRY, LITERAL_FINALLY, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, INSTANCE_INIT, STATIC_INIT, LITERAL_SWITCH, LITERAL_SYNCHRONIZED"/>
    </module>
    <module name="EmptyCatchBlock">
      <property name="commentFormat" value=".*"/>
      <property name="exceptionVariableName" value="^$"/>
    </module>
    <module name="LeftCurly">
      <property name="severity" value="warning"/>
      <property name="ignoreEnums" value="true"/>
      <property name="option" value="nl"/>
      <property name="tokens" value="CLASS_DEF, CTOR_DEF, INTERFACE_DEF, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, METHOD_DEF"/>
    </module>
    <module name="NeedBraces">
      <property name="severity" value="warning"/>
      <property name="allowEmptyLoopBody" value="false"/>
      <property name="allowSingleLineStatement" value="false"/>
      <property name="tokens" value="LITERAL_DO, LITERAL_ELSE, LITERAL_FOR, LITERAL_IF, LITERAL_WHILE"/>
    </module>
    <module name="RightCurly">
      <property name="severity" value="warning"/>
      <property name="option" value="alone"/>
      <property name="tokens" value="LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO"/>
    </module>

    <!-- Class Design -->
    <module name="DesignForExtension">
      <property name="ignoredAnnotations" value="After, AfterClass, Before, BeforeClass, Test"/>
      <property name="requiredJavadocPhrase" value=".*"/>
    </module>
    <module name="FinalClass">
      <property name="severity" value="warning"/>
    </module>
    <module name="HideUtilityClassConstructor">
      <property name="severity" value="warning"/>
    </module>
    <module name="InnerTypeLast">
    </module>
    <module name="InterfaceIsType">
      <property name="severity" value="warning"/>
      <property name="allowMarkerInterfaces" value="true"/>
    </module>
    <module name="MutableException">
      <property name="extendedClassNameFormat" value="^.*Exception$|^.*Error$|^.*Throwable$"/>
      <property name="format" value="^.*Exception$|^.*Error$|^.*Throwable$"/>
    </module>
    <module name="OneTopLevelClass">
    </module>
    <module name="ThrowsCount">
      <property name="ignorePrivateMethods" value="true"/>
      <property name="max" value="10"/>
    </module>
    <module name="VisibilityModifier">
      <property name="severity" value="warning"/>
      <property name="allowPublicFinalFields" value="false"/>
      <property name="allowPublicImmutableFields" value="false"/>
      <property name="ignoreAnnotationCanonicalNames" value="com.google.common.annotations.VisibleForTesting, org.junit.ClassRule, org.junit.Rule"/>
      <property name="immutableClassCanonicalNames" value="java.io.File, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Double, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Short, java.lang.StackTraceElement, java.lang.String, java.math.BigDecimal, java.math.BigInteger, java.net.Inet4Address, java.net.Inet6Address, java.net.InetSocketAddress, java.net.URI, java.net.URL, java.util.Locale, java.util.UUID"/>
      <property name="packageAllowed" value="false"/>
      <property name="protectedAllowed" value="false"/>
      <property name="publicMemberPattern" value="^serialVersionUID$"/>
    </module>

    <!-- Coding -->
    <!-- 
    <module name="ArrayTrailingComma">
      <property name="alwaysDemandTrailingComma" value="false"/>
    </module> 
    -->
    <module name="AvoidDoubleBraceInitialization">
    </module>
    <!-- 
    <module name="AvoidInlineConditionals">
    </module> 
    -->
    <!-- 
    <module name="AvoidNoArgumentSuperConstructorCall">
    </module>
    -->
    <module name="CovariantEquals">
    </module>
    <module name="DeclarationOrder">
      <property name="ignoreConstructors" value="false"/>
      <property name="ignoreModifiers" value="false"/>
    </module>
    <module name="DefaultComesLast">
      <property name="skipIfLastAndSharedWithCase" value="false"/>
    </module>
    <module name="EmptyStatement">
      <property name="severity" value="warning"/>
    </module>
    <module name="EqualsAvoidNull">
      <property name="ignoreEqualsIgnoreCase" value="false"/>
    </module>
    <module name="EqualsHashCode">
      <property name="severity" value="warning"/>
    </module>
    <module name="ExplicitInitialization">
      <property name="onlyObjectReferences" value="false"/>
    </module>
    <module name="FallThrough">
      <property name="checkLastCaseGroup" value="false"/>
      <property name="reliefPattern" value="falls?[ -]?thr(u|ough)"/>
    </module>
    <module name="FinalLocalVariable">
      <property name="validateEnhancedForLoopVariable" value="false"/>
      <property name="tokens" value="VARIABLE_DEF"/>
    </module>
    <module name="HiddenField">
      <property name="severity" value="warning"/>
      <property name="ignoreAbstractMethods" value="false"/>
      <property name="ignoreConstructorParameter" value="true"/>
      <property name="ignoreFormat" value=""/>
      <property name="ignoreSetter" value="true"/>
      <property name="setterCanReturnItsClass" value="true"/>
      <property name="tokens" value="VARIABLE_DEF, PARAMETER_DEF, PATTERN_VARIABLE_DEF, LAMBDA, RECORD_COMPONENT_DEF"/>
    </module>
    <module name="IllegalCatch">
      <property name="illegalClassNames" value="Error, Exception, RuntimeException, Throwable, java.lang.Error, java.lang.Exception, java.lang.RuntimeException, java.lang.Throwable"/>
    </module>
    <module name="IllegalInstantiation">
      <property name="classes" value="java.lang.Boolean"/>
    </module>
    <module name="IllegalThrows">
      <property name="ignoreOverriddenMethods" value="true"/>
      <property name="ignoredMethodNames" value="finalize"/>
      <property name="illegalClassNames" value="Error, RuntimeException, Throwable, java.lang.Error, java.lang.RuntimeException, java.lang.Throwable"/>
    </module>
    <module name="IllegalToken">
      <property name="tokens" value="LABELED_STAT"/>
    </module>
    <module name="IllegalTokenText">
      <property name="format" value="^$"/>
      <property name="ignoreCase" value="false"/>
      <property name="message" value=""/>
      <property name="tokens" value=""/>
    </module>
    <module name="IllegalType">
      <property name="ignoredMethodNames" value="getEnvironment, getInitialContext"/>
      <property name="illegalAbstractClassNameFormat" value="^(.*[.])?Abstract.*$"/>
      <property name="illegalClassNames" value="HashMap, HashSet, LinkedHashMap, LinkedHashSet, TreeMap, TreeSet, java.util.HashMap, java.util.HashSet, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.TreeMap, java.util.TreeSet"/>
      <property name="legalAbstractClassNames" value=""/>
      <property name="memberModifiers" value=""/>
      <property name="validateAbstractClassNames" value="false"/>
      <property name="tokens" value="ANNOTATION_FIELD_DEF, CLASS_DEF, INTERFACE_DEF, METHOD_CALL, METHOD_DEF, METHOD_REF, PARAMETER_DEF, VARIABLE_DEF, PATTERN_VARIABLE_DEF, RECORD_DEF, RECORD_COMPONENT_DEF"/>
    </module>
    <module name="InnerAssignment">
      <property name="severity" value="warning"/>
    </module>
    <module name="MagicNumber">
      <property name="severity" value="warning"/>
      <property name="constantWaiverParentToken" value="ARRAY_INIT, ASSIGN, DIV, ELIST, EXPR, LITERAL_NEW, METHOD_CALL, MINUS, PLUS, STAR, TYPECAST, UNARY_MINUS, UNARY_PLUS"/>
      <property name="ignoreAnnotation" value="false"/>
      <property name="ignoreAnnotationElementDefaults" value="true"/>
      <property name="ignoreFieldDeclaration" value="false"/>
      <property name="ignoreHashCodeMethod" value="false"/>
      <property name="ignoreNumbers" value="-1, 0, 1, 2"/>
      <property name="tokens" value="NUM_DOUBLE, NUM_FLOAT, NUM_INT, NUM_LONG"/>
    </module>
    <!-- 
    <module name="MatchXpath">
      <property name="query" value="//METHOD_DEF[.//LITERAL_PRIVATE and following-sibling::METHOD_DEF[.//LITERAL_PUBLIC]]"/>
      <message key="matchxpath.match" value="Private methods must appear after public methods"/>
    </module>
    -->
    <module name="MissingCtor">
    </module> 
    <module name="MissingSwitchDefault">
      <property name="severity" value="warning"/>
    </module>
    <module name="ModifiedControlVariable">
      <property name="skipEnhancedForLoopVariable" value="false"/>
    </module>
    <module name="MultipleStringLiterals">
      <property name="allowedDuplicates" value="1"/>
      <property name="ignoreOccurrenceContext" value="ANNOTATION"/>
      <property name="ignoreStringsRegexp" value="^&quot;&quot;$"/>
    </module>
    <module name="MultipleVariableDeclarations">
    </module>
    <module name="NestedForDepth">
      <property name="max" value="3"/>
    </module>
    <module name="NestedIfDepth">
      <property name="max" value="14"/>
    </module>
    <module name="NestedTryDepth">
      <property name="max" value="2"/>
    </module>
    <module name="NoArrayTrailingComma">
    </module>
    <module name="NoClone">
    </module>
    <module name="NoEnumTrailingComma">
    </module>
    <module name="NoFinalizer">
    </module>
    <module name="OneStatementPerLine">
      <property name="treatTryResourcesAsStatement" value="false"/>
    </module>
    <module name="OverloadMethodsDeclarationOrder">
    </module>
    <module name="PackageDeclaration">
      <property name="matchDirectoryStructure" value="true"/>
    </module>
    <module name="ParameterAssignment">
    </module>
    <module name="RequireThis">
      <property name="checkFields" value="true"/>
      <property name="checkMethods" value="false"/>
      <property name="validateOnlyOverlapping" value="true"/>
    </module> 
    <module name="ReturnCount">
      <property name="format" value="^equals$"/>
      <property name="max" value="95"/>
      <property name="maxForVoid" value="4"/>
      <property name="tokens" value="CTOR_DEF, METHOD_DEF, LAMBDA"/>
    </module>
    <module name="SimplifyBooleanExpression">
      <property name="severity" value="warning"/>
    </module>
    <module name="SimplifyBooleanReturn">
      <property name="severity" value="warning"/>
    </module>
    <module name="StringLiteralEquality">
    </module>
    <module name="SuperClone">
    </module>
    <module name="SuperFinalize">
    </module>
    <!-- 
    <module name="UnnecessaryParentheses">
      <property name="tokens" value="EXPR, IDENT, NUM_DOUBLE, NUM_FLOAT, NUM_INT, NUM_LONG, STRING_LITERAL, LITERAL_NULL, LITERAL_FALSE, LITERAL_TRUE, ASSIGN, BAND_ASSIGN, BOR_ASSIGN, BSR_ASSIGN, BXOR_ASSIGN, DIV_ASSIGN, MINUS_ASSIGN, MOD_ASSIGN, PLUS_ASSIGN, SL_ASSIGN, SR_ASSIGN, STAR_ASSIGN, LAMBDA, TEXT_BLOCK_LITERAL_BEGIN, LAND, LOR, LITERAL_INSTANCEOF, GT, LT, GE, LE, EQUAL, NOT_EQUAL, UNARY_MINUS, UNARY_PLUS, INC, DEC, LNOT, BNOT, POST_INC, POST_DEC"/>
    </module> 
    -->
    <module name="UnnecessarySemicolonAfterOuterTypeDeclaration">
      <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, RECORD_DEF"/>
    </module>
    <module name="UnnecessarySemicolonAfterTypeMemberDeclaration">
      <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, VARIABLE_DEF, ANNOTATION_FIELD_DEF, STATIC_INIT, INSTANCE_INIT, CTOR_DEF, METHOD_DEF, ENUM_CONSTANT_DEF, COMPACT_CTOR_DEF, RECORD_DEF"/>
    </module>
    <module name="UnnecessarySemicolonInEnumeration">
    </module>
    <module name="UnnecessarySemicolonInTryWithResources">
      <property name="allowWhenNoBraceAfterSemicolon" value="true"/>
    </module>
    <module name="UnusedLocalVariable">
    </module>
    <module name="VariableDeclarationUsageDistance">
      <property name="allowedDistance" value="3"/>
      <property name="ignoreFinal" value="true"/>
      <property name="ignoreVariablePattern" value=""/>
      <property name="validateBetweenScopes" value="false"/>
    </module>

    <!-- Imports -->
    <module name="AvoidStarImport">
      <property name="severity" value="warning"/>
      <property name="allowClassImports" value="false"/>
      <property name="allowStaticMemberImports" value="false"/>
      <property name="excludes" value=""/>
    </module>
    <module name="AvoidStaticImport">
      <property name="excludes" value="org.junit.jupiter.api.Assertions.*,org.mockito.Mockito.*,org.mockito.ArgumentMatchers.*"/>
    </module> 
    <!-- 
    <module name="CustomImportOrder">
      <property name="customImportOrderRules" value=""/>
      <property name="separateLineBetweenGroups" value="true"/>
      <property name="sortImportsInGroupAlphabetically" value="false"/>
      <property name="specialImportsRegExp" value="^$"/>
      <property name="standardPackageRegExp" value="^(java|javax)\."/>
      <property name="thirdPartyPackageRegExp" value=".*"/>
    </module> 
    -->
    <module name="IllegalImport">
      <property name="severity" value="warning"/>
      <property name="illegalClasses" value=""/>
      <property name="illegalPkgs" value="sun"/>
      <property name="regexp" value="false"/>
    </module>
    <!-- 
    <module name="ImportControl">
      <property name="file" value=""/>
      <property name="path" value=".*"/>
    </module> 
    -->
    <!-- 
    <module name="ImportOrder">
      <property name="caseSensitive" value="true"/>
      <property name="groups" value=""/>
      <property name="option" value="under"/>
      <property name="ordered" value="true"/>
      <property name="separated" value="false"/>
      <property name="separatedStaticGroups" value="false"/>
      <property name="sortStaticImportsAlphabetically" value="false"/>
      <property name="staticGroups" value=""/>
      <property name="useContainerOrderingForStatic" value="false"/>
    </module> 
    -->
    <module name="RedundantImport">
      <property name="severity" value="warning"/>
    </module>
    <module name="UnusedImports">
      <property name="severity" value="warning"/>
      <property name="processJavadoc" value="true"/>
    </module>

    <!-- Javadoc Comments -->
    <module name="AtclauseOrder">
      <property name="tagOrder" value="@author, @exception, @param, @return, @throws, @see, @serial, @serialData, @serialField, @since, @version, @deprecated"/>
      <property name="target" value="CLASS_DEF, COMPACT_CTOR_DEF, CTOR_DEF, ENUM_DEF, INTERFACE_DEF, METHOD_DEF, RECORD_DEF, VARIABLE_DEF"/>
      <property name="violateExecutionOnNonTightHtml" value="false"/>
    </module>
    <module name="InvalidJavadocPosition">
    </module>
    <module name="JavadocBlockTagLocation">
      <property name="tags" value="author, deprecated, exception, hidden, param, provides, return, see, serial, serialData, serialField, since, throws, uses, version"/>
      <property name="violateExecutionOnNonTightHtml" value="false"/>
    </module>
    <module name="JavadocContentLocationCheck">
      <property name="location" value="second_line"/>
    </module>
    <module name="JavadocMethod">
      <property name="severity" value="warning"/>
      <property name="accessModifiers" value="public, protected, package, private"/>
      <property name="allowMissingParamTags" value="false"/>
      <property name="allowMissingReturnTag" value="false"/>
      <property name="allowedAnnotations" value="Override"/>
      <property name="validateThrows" value="false"/>
      <property name="tokens" value="METHOD_DEF, CTOR_DEF, ANNOTATION_FIELD_DEF, COMPACT_CTOR_DEF"/>
    </module>
    <module name="JavadocMissingLeadingAsterisk">
      <property name="violateExecutionOnNonTightHtml" value="false"/>
    </module>
    <module name="JavadocMissingWhitespaceAfterAsterisk">
      <property name="violateExecutionOnNonTightHtml" value="false"/>
    </module>
    <!-- 
    <module name="JavadocParagraph">
      <property name="allowNewlineParagraph" value="true"/>
      <property name="violateExecutionOnNonTightHtml" value="false"/>
    </module> 
    -->
    <!-- 
    <module name="JavadocStyle">
      <property name="checkEmptyJavadoc" value="false"/>
      <property name="checkFirstSentence" value="true"/>
      <property name="checkHtml" value="true"/>
      <property name="endOfSentenceFormat" value="([.?!][ \t\n\r\f<])|([.?!]$)"/>
      <property name="excludeScope" value=""/>
      <property name="scope" value="private"/>
      <property name="tokens" value="ANNOTATION_DEF, ANNOTATION_FIELD_DEF, CLASS_DEF, CTOR_DEF, ENUM_CONSTANT_DEF, ENUM_DEF, INTERFACE_DEF, METHOD_DEF, PACKAGE_DEF, VARIABLE_DEF, RECORD_DEF, COMPACT_CTOR_DEF"/>
    </module> 
    -->
    <!-- 
    <module name="JavadocTagContinuationIndentation">
      <property name="offset" value="2"/>
      <property name="violateExecutionOnNonTightHtml" value="false"/>
    </module> 
    -->
    <module name="JavadocType">
      <property name="severity" value="warning"/>
      <property name="allowMissingParamTags" value="false"/>
      <property name="allowUnknownTags" value="false"/>
      <property name="allowedAnnotations" value="Generated"/>
      <!-- <property name="authorFormat" value=""/> -->
      <!-- <property name="excludeScope" value=""/> -->
      <property name="scope" value="private"/>
      <!-- <property name="versionFormat" value=""/> -->
      <property name="tokens" value="INTERFACE_DEF, CLASS_DEF, ENUM_DEF, ANNOTATION_DEF, RECORD_DEF"/>
    </module>
    <module name="JavadocVariable">
      <property name="severity" value="warning"/>
      <!-- <property name="excludeScope" value=""/> -->
      <!-- <property name="ignoreNamePattern" value=""/> -->
      <property name="scope" value="private"/>
      <property name="tokens" value="ENUM_CONSTANT_DEF"/>
    </module>
    <module name="MissingJavadocMethod">
      <property name="allowMissingPropertyJavadoc" value="false"/>
      <property name="allowedAnnotations" value="Override"/>
      <!-- <property name="excludeScope" value=""/> -->
      <property name="ignoreMethodNamesRegex" value=""/>
      <property name="minLineCount" value="-1"/>
      <property name="scope" value="public"/>
      <property name="tokens" value="METHOD_DEF, CTOR_DEF, ANNOTATION_FIELD_DEF, COMPACT_CTOR_DEF"/>
    </module>
    <module name="MissingJavadocPackage">
    </module>
    <module name="MissingJavadocType">
      <!-- <property name="excludeScope" value=""/> -->
      <property name="scope" value="public"/>
      <property name="skipAnnotations" value="Generated"/>
      <property name="tokens" value="INTERFACE_DEF, CLASS_DEF, ENUM_DEF, ANNOTATION_DEF, RECORD_DEF"/>
    </module>
    <module name="NonEmptyAtclauseDescription">
      <property name="violateExecutionOnNonTightHtml" value="false"/>
      <property name="javadocTokens" value="PARAM_LITERAL, RETURN_LITERAL, THROWS_LITERAL, EXCEPTION_LITERAL, DEPRECATED_LITERAL"/>
    </module>
    <module name="RequireEmptyLineBeforeBlockTagGroup">
      <property name="violateExecutionOnNonTightHtml" value="false"/>
    </module>
    <module name="SingleLineJavadoc">
      <property name="ignoreInlineTags" value="true"/>
      <property name="ignoredTags" value=""/>
      <property name="violateExecutionOnNonTightHtml" value="false"/>
    </module>
    <module name="SummaryJavadocCheck">
      <property name="forbiddenSummaryFragments" value="^$"/>
      <property name="period" value="."/>
      <property name="violateExecutionOnNonTightHtml" value="false"/>
    </module>
    <!-- 
    <module name="WriteTag">
      <property name="tag" value=""/>
      <property name="tagFormat" value=""/>
      <property name="tagSeverity" value="info"/>
      <property name="tokens" value="INTERFACE_DEF, CLASS_DEF, ENUM_DEF, ANNOTATION_DEF, RECORD_DEF"/>
    </module> 
    -->

    <!-- Metrics -->
    <!-- 
    <module name="BooleanExpressionComplexity">
      <property name="max" value="3"/>
      <property name="tokens" value="LAND, BAND, LOR, BOR, BXOR"/>
    </module> 
    -->
    <!-- 
    <module name="ClassDataAbstractionCoupling">
      <property name="excludeClassesRegexps" value="^$"/>
      <property name="excludedClasses" value="ArrayIndexOutOfBoundsException, ArrayList, Boolean, Byte, Character, Class, Collection, Deprecated, Deque, Double, DoubleStream, EnumSet, Exception, Float, FunctionalInterface, HashMap, HashSet, IllegalArgumentException, IllegalStateException, IndexOutOfBoundsException, IntStream, Integer, LinkedHashMap, LinkedHashSet, LinkedList, List, Long, LongStream, Map, NullPointerException, Object, Optional, OptionalDouble, OptionalInt, OptionalLong, Override, Queue, RuntimeException, SafeVarargs, SecurityException, Set, Short, SortedMap, SortedSet, Stream, String, StringBuffer, StringBuilder, SuppressWarnings, Throwable, TreeMap, TreeSet, UnsupportedOperationException, Void, boolean, byte, char, double, float, int, long, short, var, void"/>
      <property name="excludedPackages" value=""/>
      <property name="max" value="7"/>
    </module> 
    -->
    <!-- 
    <module name="ClassFanOutComplexity">
      <property name="excludeClassesRegexps" value="^$"/>
      <property name="excludedClasses" value="ArrayIndexOutOfBoundsException, ArrayList, Boolean, Byte, Character, Class, Collection, Deprecated, Deque, Double, DoubleStream, EnumSet, Exception, Float, FunctionalInterface, HashMap, HashSet, IllegalArgumentException, IllegalStateException, IndexOutOfBoundsException, IntStream, Integer, LinkedHashMap, LinkedHashSet, LinkedList, List, Long, LongStream, Map, NullPointerException, Object, Optional, OptionalDouble, OptionalInt, OptionalLong, Override, Queue, RuntimeException, SafeVarargs, SecurityException, Set, Short, SortedMap, SortedSet, Stream, String, StringBuffer, StringBuilder, SuppressWarnings, Throwable, TreeMap, TreeSet, UnsupportedOperationException, Void, boolean, byte, char, double, float, int, long, short, var, void"/>
      <property name="excludedPackages" value=""/>
      <property name="max" value="20"/>
    </module> 
    -->
    <!-- 
    <module name="CyclomaticComplexity">
      <property name="max" value="10"/>
      <property name="switchBlockAsSingleDecisionPoint" value="false"/>
      <property name="tokens" value="LITERAL_WHILE, LITERAL_DO, LITERAL_FOR, LITERAL_IF, LITERAL_SWITCH, LITERAL_CASE, LITERAL_CATCH, QUESTION, LAND, LOR"/>
    </module> 
    -->
    <!-- 
    <module name="JavaNCSS">
      <property name="classMaximum" value="1500"/>
      <property name="fileMaximum" value="2000"/>
      <property name="methodMaximum" value="50"/>
      <property name="recordMaximum" value="150"/>
    </module> 
    -->
    <!-- 
    <module name="NPathComplexity">
      <property name="max" value="200"/>
    </module> 
    -->

    <!-- Miscellaneous -->
    <module name="ArrayTypeStyle">
      <property name="severity" value="warning"/>
      <property name="javaStyle" value="true"/>
    </module>
    <module name="AvoidEscapedUnicodeCharacters">
      <property name="allowByTailComment" value="false"/>
      <property name="allowEscapesForControlCharacters" value="false"/>
      <property name="allowIfAllCharactersEscaped" value="false"/>
      <property name="allowNonPrintableEscapes" value="false"/>
    </module>
    <module name="CommentsIndentation">
      <property name="tokens" value="SINGLE_LINE_COMMENT, BLOCK_COMMENT_BEGIN"/>
    </module>
    <!-- 
    <module name="DescendantToken">
      <property name="limitedTokens" value=""/>
      <property name="maximumDepth" value="2147483647"/>
      <property name="maximumMessage" value=""/>
      <property name="maximumNumber" value="2147483647"/>
      <property name="minimumDepth" value="0"/>
      <property name="minimumMessage" value=""/>
      <property name="minimumNumber" value="0"/>
      <property name="sumTokenCounts" value="false"/>
      <property name="tokens" value=""/>
    </module> 
    -->
    <module name="FinalParameters">
      <property name="ignorePrimitiveTypes" value="false"/>
      <property name="tokens" value="METHOD_DEF,CTOR_DEF,LITERAL_CATCH"/>
    </module>
    <!-- TODO
    <module name="Indentation">
      <property name="arrayInitIndent" value="2"/>
      <property name="basicOffset" value="2"/>
      <property name="braceAdjustment" value="1"/>
      <property name="caseIndent" value="2"/>
      <property name="forceStrictCondition" value="false"/>
      <property name="lineWrappingIndentation" value="2"/>
      <property name="throwsIndent" value="2"/>
    </module>
    -->
    <module name="NoCodeInFile">
    </module>
    <module name="OuterTypeFilename">
    </module>
    <!--
    <module name="TodoComment">
      <property name="severity" value="warning"/>
      <property name="format" value="TODO:"/>
    </module>
    -->
    <!--
    <module name="TrailingComment">
      <property name="format" value="^[\s});]*$"/>
      <property name="legalComment" value=""/>
    </module>
    -->
    <module name="UncommentedMain">
      <property name="excludedClasses" value="^$"/>
    </module>
    <module name="UpperEll">
      <property name="severity" value="warning"/>
    </module>

    <!-- Modifiers -->
    <!-- 
    <module name="ClassMemberImpliedModifier">
      <property name="violateImpliedStaticOnNestedEnum" value="true"/>
      <property name="violateImpliedStaticOnNestedInterface" value="true"/>
      <property name="violateImpliedStaticOnNestedRecord" value="true"/>
    </module>
    -->
    <module name="InterfaceMemberImpliedModifier">
      <property name="violateImpliedAbstractMethod" value="false"/>
      <property name="violateImpliedFinalField" value="false"/>
      <property name="violateImpliedPublicField" value="false"/>
      <property name="violateImpliedPublicMethod" value="false"/>
      <property name="violateImpliedPublicNested" value="false"/>
      <property name="violateImpliedStaticField" value="false"/>
      <property name="violateImpliedStaticNested" value="false"/>
    </module>
    <module name="ModifierOrder">
      <property name="severity" value="warning"/>
    </module>
    <module name="RedundantModifier">
      <property name="severity" value="warning"/>
      <property name="tokens" value="METHOD_DEF, VARIABLE_DEF, ANNOTATION_FIELD_DEF, INTERFACE_DEF, CTOR_DEF, CLASS_DEF, ENUM_DEF, RESOURCE"/>
    </module>

    <!-- Naming Conventions -->
    <!-- 
    <module name="AbbreviationAsWordInName">
      <property name="allowedAbbreviationLength" value="3"/>
      <property name="allowedAbbreviations" value=""/>
      <property name="ignoreFinal" value="true"/>
      <property name="ignoreOverriddenMethods" value="true"/>
      <property name="ignoreStatic" value="true"/>
      <property name="ignoreStaticFinal" value="true"/>
      <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, ANNOTATION_FIELD_DEF, PARAMETER_DEF, VARIABLE_DEF, METHOD_DEF, PATTERN_VARIABLE_DEF, RECORD_DEF, RECORD_COMPONENT_DEF"/>
    </module> 
    -->
    <module name="AbstractClassName">
      <property name="format" value="^Abstract.+$"/>
      <property name="ignoreModifier" value="false"/>
      <property name="ignoreName" value="false"/>
    </module>
    <module name="CatchParameterName">
      <property name="format" value="^(e|t|ex|[a-z][a-z][a-zA-Z]+)$"/>
    </module>
    <module name="ClassTypeParameterName">
      <property name="format" value="^[A-Z]$"/>
    </module>
    <module name="ConstantName">
      <property name="severity" value="warning"/>
      <property name="applyToPackage" value="true"/>
      <property name="applyToPrivate" value="true"/>
      <property name="applyToProtected" value="true"/>
      <property name="applyToPublic" value="true"/>
      <property name="format" value="^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"/>
    </module>
    <module name="IllegalIdentifierName">
      <property name="format" value="(?i)^(?!(record|yield|var|permits|sealed|_)$).+$"/>
      <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, ANNOTATION_FIELD_DEF, PARAMETER_DEF, VARIABLE_DEF, METHOD_DEF, ENUM_CONSTANT_DEF, PATTERN_VARIABLE_DEF, RECORD_DEF, RECORD_COMPONENT_DEF, LAMBDA"/>
    </module>
    <module name="InterfaceTypeParameterName">
      <property name="format" value="^[A-Z]$"/>
    </module>
    <module name="LambdaParameterName">
      <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
    </module>
    <module name="LocalFinalVariableName">
      <property name="severity" value="warning"/>
      <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
      <property name="tokens" value="VARIABLE_DEF, PARAMETER_DEF, RESOURCE"/>
    </module>
    <module name="LocalVariableName">
      <property name="severity" value="warning"/>
      <property name="allowOneCharVarInForLoop" value="false"/>
      <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
    </module>
    <module name="MemberName">
      <property name="severity" value="warning"/>
      <property name="applyToPackage" value="true"/>
      <property name="applyToPrivate" value="true"/>
      <property name="applyToProtected" value="true"/>
      <property name="applyToPublic" value="true"/>
      <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
    </module>
    <module name="MethodName">
      <property name="severity" value="warning"/>
      <property name="allowClassName" value="false"/>
      <property name="applyToPackage" value="true"/>
      <property name="applyToPrivate" value="true"/>
      <property name="applyToProtected" value="true"/>
      <property name="applyToPublic" value="true"/>
      <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
    </module>
    <module name="MethodTypeParameterName">
      <property name="format" value="^[A-Z]$"/>
    </module>
    <module name="PackageName">
      <property name="severity" value="warning"/>
      <property name="format" value="^[a-z]+(\.[a-zA-Z_]\w*)*$"/>
    </module>
    <module name="ParameterName">
      <property name="severity" value="warning"/>
      <property name="accessModifiers" value="public, protected, package, private"/>
      <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
      <property name="ignoreOverridden 	" value="false"/>
    </module>
    <module name="PatternVariableName">
      <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
    </module>
    <module name="RecordComponentName">
      <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
    </module>
    <module name="RecordTypeParameterName">
      <property name="format" value="^[A-Z]$"/>
    </module>
    <module name="StaticVariableName">
      <property name="severity" value="warning"/>
      <property name="applyToPackage" value="true"/>
      <property name="applyToPrivate" value="true"/>
      <property name="applyToProtected" value="true"/>
      <property name="applyToPublic" value="true"/>
      <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
    </module>
    <module name="TypeName">
      <property name="severity" value="warning"/>
      <property name="applyToPackage" value="true"/>
      <property name="applyToPrivate" value="true"/>
      <property name="applyToProtected" value="true"/>
      <property name="applyToPublic" value="true"/>
      <property name="format" value="^[A-Z][a-zA-Z0-9]*$"/>
      <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, RECORD_DEF"/>
    </module>

    <!-- Regexp -->
    <!-- 
    <module name="Regexp">
      <property name="duplicateLimit" value="0"/>
      <property name="errorLimit" value="100"/>
      <property name="format" value="^$"/>
      <property name="ignoreComments" value="false"/>
      <property name="illegalPattern" value="false"/>
      <property name="message" value=""/>
    </module> 
    -->
    <!-- 
    <module name="RegexpMultiline">
      <property name="fileExtensions" value="*"/>
      <property name="format" value="$."/>
      <property name="ignoreCase" value="false"/>
      <property name="matchAcrossLines" value="false"/>
      <property name="maximum" value="0"/>
      <property name="message" value=""/>
      <property name="minimum" value="0"/>
    </module>
    -->
    <!-- 
    <module name="RegexpOnFilename">
      <property name="fileExtensions" value="*"/>
      <property name="fileNamePattern" value=""/>
      <property name="folderPattern" value=""/>
      <property name="ignoreFileNameExtensions" value="false"/>
      <property name="match" value="true"/>
    </module>
    -->
    <!-- 
    <module name="RegexpSingleline">
      <property name="fileExtensions" value="*"/>
      <property name="format" value="$."/>
      <property name="ignoreCase" value="false"/>
      <property name="maximum" value="0"/>
      <property name="message" value=""/>
      <property name="minimum" value="0"/>
    </module> 
    -->
    <!-- 
    <module name="RegexpSinglelineJava">
      <property name="format" value="$."/>
      <property name="ignoreCase" value="false"/>
      <property name="ignoreComments" value="false"/>
      <property name="maximum" value="0"/>
      <property name="message" value=""/>
      <property name="minimum" value="0"/>
    </module> 
    -->

    <!-- Size Violations -->
    <module name="AnonInnerLength">
      <property name="max" value="100"/>
    </module>
    <!-- 
    <module name="ExecutableStatementCount">
      <property name="max" value="30"/>
      <property name="tokens" value="CTOR_DEF, METHOD_DEF, INSTANCE_INIT, STATIC_INIT, COMPACT_CTOR_DEF, LAMBDA"/>
    </module> 
    -->
    <module name="LambdaBodyLength">
      <property name="max" value="18"/>
    </module>
    <module name="MethodCount">
      <property name="maxPackage" value="110"/>
      <property name="maxPrivate" value="100"/>
      <property name="maxProtected" value="100"/>
      <property name="maxPublic" value="110"/>
      <property name="maxTotal" value="110"/>
      <property name="tokens" value="CLASS_DEF, ENUM_CONSTANT_DEF, ENUM_DEF, INTERFACE_DEF, ANNOTATION_DEF, RECORD_DEF"/>
    </module>
    <module name="MethodLength">
      <property name="severity" value="warning"/>
      <property name="countEmpty" value="false"/>
      <property name="max" value="260"/>
      <property name="tokens" value="METHOD_DEF, CTOR_DEF, COMPACT_CTOR_DEF"/>
    </module>
    <module name="OuterTypeNumber">
      <property name="max" value="1"/>
    </module>
    <module name="ParameterNumber">
      <property name="severity" value="warning"/>
      <property name="ignoreOverriddenMethods" value="false"/>
      <property name="max" value="31"/>
      <property name="tokens" value="METHOD_DEF , CTOR_DEF"/>
    </module>
    <module name="RecordComponentNumber">
      <property name="accessModifiers" value="public, protected, package, private"/>
      <property name="max" value="8"/>
    </module>

    <!-- Whitespace  -->
    <module name="EmptyForInitializerPad">
      <property name="option" value="nospace"/>
    </module>
    <module name="EmptyForIteratorPad">
      <property name="severity" value="warning"/>
      <property name="option" value="nospace"/>
    </module>
    <module name="EmptyLineSeparator">
      <property name="allowMultipleEmptyLines" value="true"/>
      <property name="allowMultipleEmptyLinesInsideClassMembers" value="false"/>
      <property name="allowNoEmptyLineBetweenFields" value="false"/>
      <property name="tokens" value="IMPORT, CLASS_DEF, INTERFACE_DEF, ENUM_DEF, STATIC_INIT, INSTANCE_INIT, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
    </module>
    <module name="GenericWhitespace">
    </module>
    <module name="MethodParamPad">
      <property name="allowLineBreaks" value="false"/>
      <property name="option" value="nospace"/>
      <property name="tokens" value="CTOR_DEF, LITERAL_NEW, METHOD_CALL, METHOD_DEF, SUPER_CTOR_CALL, ENUM_CONSTANT_DEF, RECORD_DEF"/> <!-- TODO , STATIC_IMPORT -->
    </module>
    <module name="NoLineWrap">
      <property name="tokens" value="IMPORT, PACKAGE_DEF"/> <!-- TODO , STATIC_IMPORT -->
    </module>
    <module name="NoWhitespaceAfter">
      <property name="severity" value="warning"/>
      <property name="allowLineBreaks" value="true"/>
      <property name="tokens" value="ARRAY_INIT, INC, DEC, UNARY_MINUS, UNARY_PLUS, BNOT, LNOT, DOT, TYPECAST, ARRAY_DECLARATOR, INDEX_OP"/> <!-- TODO , AT, METHOD_REF -->
    </module>
    <module name="NoWhitespaceBefore">
      <property name="severity" value="warning"/>
      <property name="allowLineBreaks" value="false"/>
      <property name="tokens" value="COMMA, SEMI, POST_INC, POST_DEC, DOT, GENERIC_START, GENERIC_END"/> <!-- TODO , ELLIPSIS, METHOD_REF -->
    </module>
    <module name="NoWhitespaceBeforeCaseDefaultColon">
    </module>
    <module name="OperatorWrap">
      <property name="severity" value="warning"/>
      <property name="option" value="eol"/>
      <property name="tokens" value=""/>
    </module>
    <module name="ParenPad">
      <property name="severity" value="warning"/>
      <property name="option" value="nospace"/>
      <property name="tokens" value="ANNOTATION, ANNOTATION_FIELD_DEF, CTOR_CALL, CTOR_DEF, ENUM_CONSTANT_DEF, EXPR, LITERAL_CATCH, LITERAL_DO, LITERAL_FOR, LITERAL_IF, LITERAL_NEW, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_WHILE, METHOD_CALL, METHOD_DEF, QUESTION, RESOURCE_SPECIFICATION, SUPER_CTOR_CALL"/> <!-- TODO , LAMBDA, DOT -->
    </module>
    <module name="SeparatorWrap">
      <property name="option" value="eol"/>
      <property name="tokens" value=""/>
    </module>
    <module name="SingleSpaceSeparator">
      <property name="validateComments" value="false"/>
    </module>
    <module name="TypecastParenPad">
      <property name="option" value="nospace"/>
    </module>
    <module name="WhitespaceAfter">
      <property name="severity" value="warning"/>
      <property name="tokens" value="COMMA, SEMI, LITERAL_IF, LITERAL_ELSE, LITERAL_WHILE, LITERAL_DO, LITERAL_FOR, DO_WHILE"/>
    </module>
    <module name="WhitespaceAround">
      <property name="severity" value="warning"/>
      <property name="allowEmptyCatches" value="false"/>
      <property name="allowEmptyConstructors 	" value="false"/>
      <property name="allowEmptyLambdas" value="false"/>
      <property name="allowEmptyLoops" value="false"/>
      <property name="allowEmptyMethods" value="false"/>
      <property name="allowEmptyTypes" value="false"/>
      <property name="ignoreEnhancedForColon" value="true"/>
      <property name="tokens" value="ASSIGN,BAND,BAND_ASSIGN,BOR,BOR_ASSIGN,BSR,BSR_ASSIGN,BXOR,BXOR_ASSIGN,COLON,DIV,DIV_ASSIGN,DO_WHILE,EQUAL,GE,GT,LAMBDA,LAND,LCURLY,LE,LITERAL_ASSERT,LITERAL_CATCH,LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_FOR,LITERAL_IF,LITERAL_RETURN,LITERAL_SYNCHRONIZED,LITERAL_TRY,LITERAL_WHILE,LOR,LT,MINUS,MINUS_ASSIGN,MOD,MOD_ASSIGN,NOT_EQUAL,PLUS,PLUS_ASSIGN,QUESTION,RCURLY,SL,SLIST,SL_ASSIGN,SR,SR_ASSIGN,STAR,STAR_ASSIGN,TYPE_EXTENSION_AND"/>
    </module>

  </module>

  <!-- Headers -->
  <!-- 
  <module name="Header">
    <!- - <property name="charset" value=""/> - ->
    <property name="fileExtensions" value="java"/>
    <property name="header" value=""/>
    <!- - <property name="headerFile" value=""/> - ->
    <property name="ignoreLines" value=""/>
  </module>
  -->
   <module name="RegexpHeader">
    <!-- <property name="charset" value="UTF-8"/> -->
    <property name="fileExtensions" value="java"/>
    <property name="header" value="^/\*\n \* Copyright \(C\) (\d\d\d\d)(-(\d\d\d\d))?(,(\d\d\d\d)(-(\d\d\d\d))?)* Dipl.-Inform. Kai Hofmann. All rights reserved!\n \*/$"/>
    <!-- <property name="headerFile" value=""/> -->
    <!-- <property name="multiLines" value=""/> -->
  </module>

  <!-- Javadoc comments -->
  <module name="JavadocPackage">
    <property name="allowLegacy" value="false"/>
    <property name="fileExtensions" value=".java"/>
  </module>

  <!-- Miscellaneous -->
  <module name="NewlineAtEndOfFile">
    <property name="fileExtensions" value="java,xml,dtd,properties,txt"/>
    <property name="lineSeparator" value="lf"/>
  </module>
  <!--
  <module name="OrderedProperties">
    <property name="fileExtensions" value=".properties"/>
  </module>
  -->
  <module name="Translation">
    <property name="baseName" value="^messages.*$"/>
    <property name="fileExtensions" value=".properties"/>
    <property name="requiredTranslations" value="en, de"/>
  </module>
  <module name="UniqueProperties">
    <property name="fileExtensions" value=".properties"/>
  </module>

  <!-- Regexp -->
  <!-- 
  <module name="RegexpMultiline">
    <property name="format" value="$."/>
    <property name="message" value=""/>
    <property name="ignoreCase" value="false"/>
    <property name="minimum" value="0"/>
    <property name="maximum" value="0"/>
    <property name="matchAcrossLines" value="false"/>
    <property name="fileExtensions" value="*"/>
  </module> 
  -->
  <!-- 
  <module name="RegexpOnFilename">
    <property name="folderPattern value=""/>
    <property name="fileNamePattern value=""/>
    <property name="match value="true"/>
    <property name="ignoreFileNameExtensions" value="false"/>
    <property name="fileExtensions" value="*"/>
  </module> 
  -->
  <!-- 
  <module name="RegexpSingleline">
    <property name="format" value="$."/>
    <property name="message" value=""/>
    <property name="ignoreCase" value="false"/>
    <property name="minimum" value="0"/>
    <property name="maximum" value="0"/>
    <property name="fileExtensions" value="*"/>
  </module> 
  -->

  <!-- Size violations -->
  <module name="FileLength">
    <property name="severity" value="warning"/>
    <!-- <property name="fileExtensions" value="*"/> -->
    <property name="max" value="20000"/>
  </module>
  <module name="LineLength">
    <property name="severity" value="warning"/>
    <!-- <property name="fileExtensions" value="*"/> -->
    <!-- <property name="ignorePattern" value="^(package|import) .*"/> -->
    <property name="max" value="3100"/>
  </module>

  <!-- Whitespace -->
  <module name="FileTabCharacter">
    <property name="severity" value="warning"/>
    <property name="eachLine" value="false"/>
    <property name="fileExtensions" value="java,xml,dtd"/>
  </module>
  
  <!-- Filters -->
  <module name="SuppressWarningsFilter">
  </module>

</module>
